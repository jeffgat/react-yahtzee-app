{"version":3,"sources":["Die.js","Dice.js","RuleRow.js","Rules.js","ScoreTable.js","Game.js","App.js","registerServiceWorker.js","index.js"],"names":["Die","props","dieHandleClick","bind","this","handleClick","idx","numberWords","locked","val","disabled","rolling","classes","className","onClick","Component","defaultProps","Dice","dice","map","d","key","RuleRow","score","name","doScore","description","isActive","undefined","Rule","params","Object","assign","reduce","prev","curr","freqs","Map","set","get","Array","from","values","filter","length","TotalOneNumber","evalRoll","count","SumDistro","freq","some","c","sum","FullHouse","console","log","includes","SmallStraight","Set","size","has","LargeStraight","Yahtzee","ones","twos","threes","fours","fives","sixes","threeOfKind","fourOfKind","fullHouse","smallStraight","largeStraight","yahtzee","chance","ScoreTable","scores","totalScore","cellSpacing","evt","getTotalScore","NUM_DICE","NUM_ROLLS","Game","state","fill","rollsLeft","roll","toggleLocked","animateRoll","setState","setTimeout","st","i","Math","ceil","random","slice","rulename","ruleFn","every","x","displayRollInfo","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8599d712.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Die.css\";\n\nclass Die extends Component {\n  static defaultProps = {\n    numberWords: [\"one\", \"two\", \"three\", \"four\", \"five\", \"six\"],\n    val: 1\n  }\n  constructor(props) {\n    super(props)\n    this.dieHandleClick = this.dieHandleClick.bind(this);\n  }\n  \n  dieHandleClick() {\n    this.props.handleClick(this.props.idx)\n  }\n  \n  render() {    \n    const {numberWords, locked, val, disabled, rolling} = this.props;\n    let classes = `Die fas fa-dice-${numberWords[val - 1]} fa-5x `;\n    if (locked) classes += \"Die-locked\";\n    if (rolling) classes += \"Die-rolling\";\n    return <i className={classes} onClick={this.dieHandleClick} disabled={disabled}></i> \n  }\n}\n\nexport default Die;\n","import React, { Component } from 'react';\nimport Die from './Die';\nimport './Dice.css';\n\nclass Dice extends Component {\n  render() {\n    return <div className=\"Dice\">\n      {this.props.dice.map((d, idx) =>\n        <Die handleClick={this.props.handleClick}\n          val={d}\n          locked={this.props.locked[idx]}\n          idx={idx}\n          key={idx}\n          disabled={this.props.disabled}\n          rolling={this.props.rolling && !this.props.locked[idx]} />\n      )}\n    </div>\n  }\n}\n\nexport default Dice;","import React, { Component } from 'react';\nimport './RuleRow.css'\n\nclass RuleRow extends Component {\n  render() {\n    const {score, name, doScore, description} = this.props;\n    const isActive = score === undefined;\n    return (\n      <tr className={`RuleRow RuleRow-${isActive ? 'active' : 'disabled'}`} \n      onClick={isActive ? doScore : null}>\n        <td className=\"RuleRow-name\">{name}</td>\n        <td className=\"RuleRow-score\">{isActive ? description : score}</td>\n      </tr>\n    )\n  }\n}\n\nexport default RuleRow;","/** Rule for Yahtzee scoring.\n *\n * This is an \"abstract class\"; the real rules are subclasses of these.\n * This stores all parameters passed into it as properties on the instance\n * (to simplify child classes so they don't need constructors of their own).\n *\n * It contains useful functions for summing, counting values, and counting\n * frequencies of dice. These are used by subclassed rules.\n */\n\nclass Rule {\n  constructor(params) {\n    // put all properties in params on instance\n    Object.assign(this, params);\n  }\n\n  sum(dice) {\n    // sum of all dice\n    return dice.reduce((prev, curr) => prev + curr);\n  }\n\n  freq(dice) {\n    // frequencies of dice values\n    const freqs = new Map();\n    for (let d of dice) freqs.set(d, (freqs.get(d) || 0) + 1);\n    return Array.from(freqs.values());\n  }\n\n  count(dice, val) {\n    // # times val appears in dice\n    return dice.filter(d => d === val).length;\n  }\n}\n\n/** Given a sought-for val, return sum of dice of that val.\n *\n * Used for rules like \"sum of all ones\"\n */\n\nclass TotalOneNumber extends Rule {\n  evalRoll = dice => {\n    return this.val * this.count(dice, this.val);\n  };\n}\n\n/** Given a required # of same dice, return sum of all dice.\n *\n * Used for rules like \"sum of all dice when there is a 3-of-kind\"\n */\n\nclass SumDistro extends Rule {\n  evalRoll = dice => {\n    // do any of the counts meet of exceed this distro?\n    return this.freq(dice).some(c => c >= this.count) ? this.sum(dice) : 0;\n  };\n}\n\n/** Check if full house (3-of-kind and 2-of-kind) */\n\nclass FullHouse extends Rule {\n  evalRoll = dice => {\n    console.log(this.freq(dice));\n    return this.freq(dice).includes(2) && this.freq(dice).includes(3) ? this.score : 0;\n  }\n}\n\n/** Check for small straights. */\n\nclass SmallStraight extends Rule {\n  // TODO\n  evalRoll = dice => {\n    const d = new Set(dice);\n\n    console.log(d);\n    console.log(d.size);\n    if (d.has(2) && d.has(3) && d.has(4) && ( d.has(5) || d.has(1) ))\n    return this.score;\n\n    if (d.has(3) && d.has(4) && d.has(5) && ( d.has(6) || d.has(2) ))\n      return this.score;\n\n    return 0;\n  };\n}\n\n/** Check for large straights. */\n\nclass LargeStraight extends Rule {\n  evalRoll = dice => {\n    const d = new Set(dice);\n\n    // large straight must be 5 different dice & only one can be a 1 or a 6\n    return d.size === 5 && (!d.has(1) || !d.has(6)) ? this.score : 0;\n  };\n}\n\n/** Check if all dice are same. */\n\nclass Yahtzee extends Rule {\n  evalRoll = dice => {\n    // all dice must be the same\n    return this.freq(dice)[0] === 5 ? this.score : 0;\n  };\n}\n\n// ones, twos, etc score as sum of that value\nconst ones = new TotalOneNumber({ val: 1, description: \"1 point per 1\" });\nconst twos = new TotalOneNumber({ val: 2, description: \"2 point per 2\" });\nconst threes = new TotalOneNumber({ val: 3, description: \"3 point per 3\" });\nconst fours = new TotalOneNumber({ val: 4, description: \"4 point per 4\" });\nconst fives = new TotalOneNumber({ val: 5, description: \"5 point per 5\" });\nconst sixes = new TotalOneNumber({ val: 6, description: \"6 point per 6\" });\n\n// three/four of kind score as sum of all dice\nconst threeOfKind = new SumDistro({ count: 3, description: \"Sum all dice if 3 are the same\" });\nconst fourOfKind = new SumDistro({ count: 4, description: \"Sum all dice if 4 are the same\" });\n\n// full house scores as flat 25\nconst fullHouse = new FullHouse({ score: 25, description: \"25 points for a full house\" });\n\n// small/large straights score as 30/40\nconst smallStraight = new SmallStraight({ score: 30, description: \"30 points for a small straight\" });\nconst largeStraight = new LargeStraight({ score: 40, description: \"40 points for a large straight\" });\n\n// yahtzee scores as 50\nconst yahtzee = new Yahtzee({ score: 50, description: \"50 POINTS FOR YAHTZEE!!!\" });\n\n// for chance, can view as some of all dice, requiring at least 0 of a kind\nconst chance = new SumDistro({ count: 0, description: \"Sum of all dice\" });\n\nexport {\n  ones,\n  twos,\n  threes,\n  fours,\n  fives,\n  sixes,\n  threeOfKind,\n  fourOfKind,\n  fullHouse,\n  smallStraight,\n  largeStraight,\n  yahtzee,\n  chance\n};\n","import React, { Component } from 'react';\nimport RuleRow from './RuleRow';\nimport './ScoreTable.css';\nimport { ones, twos, threes, fours, fives, sixes, threeOfKind, fourOfKind, fullHouse, smallStraight, largeStraight, yahtzee, chance } from './Rules';\n\n\nclass ScoreTable extends Component {\n  getTotalScore() {\n    const {scores} = this.props;\n    let totalScore = 0;\n    for(let key in scores) {\n      if(scores[key]) totalScore += scores[key]\n    }\n    return totalScore;\n  }\n\n  render() {\n    const { scores, doScore } = this.props;\n\n    return (\n      <div className=\"ScoreTable\">\n        <section className=\"ScoreTable-section\">\n          <h2>Upper</h2>\n          <table cellSpacing=\"0\">\n            <tbody>\n              <RuleRow name=\"Ones\" score={scores.ones} description={ones.description} doScore={evt => doScore(\"ones\", ones.evalRoll)} />\n              <RuleRow name=\"Twos\" score={scores.twos} description={twos.description} doScore={evt => doScore(\"twos\", twos.evalRoll)} />\n              <RuleRow name=\"Threes\" score={scores.threes} description={threes.description} doScore={evt => doScore(\"threes\", threes.evalRoll)} />\n              <RuleRow name=\"Fours\" score={scores.fours} description={fours.description} doScore={evt => doScore(\"fours\", fours.evalRoll)} />\n              <RuleRow name=\"Fives\" score={scores.fives} description={fives.description} doScore={evt => doScore(\"fives\", fives.evalRoll)} />\n              <RuleRow name=\"Sixes\" score={scores.sixes} description={sixes.description} doScore={evt => doScore(\"sixes\", sixes.evalRoll)} />\n            </tbody>\n          </table>\n        </section>\n        <section className=\"ScoreTable-section ScoreTable-section-lower\">\n          <h2>Lower</h2>\n          <table cellSpacing=\"0\">\n            <tbody>\n              <RuleRow name=\"Three of Kind\" score={scores.threeOfKind} description={threeOfKind.description} doScore={evt => doScore(\"threeOfKind\", threeOfKind.evalRoll)} />\n              <RuleRow name=\"Four of Kind\" score={scores.fourOfKind} description={fourOfKind.description} doScore={evt => doScore(\"fourOfKind\", fourOfKind.evalRoll)} />\n              <RuleRow name=\"Full House\" score={scores.fullHouse} description={fullHouse.description} doScore={evt => doScore(\"fullHouse\", fullHouse.evalRoll)} />\n              <RuleRow name=\"Small Straight\" score={scores.smallStraight} description={smallStraight.description} doScore={evt => doScore(\"smallStraight\", smallStraight.evalRoll)} />\n              <RuleRow name=\"Large Straight\" score={scores.largeStraight} description={largeStraight.description} doScore={evt => doScore(\"largeStraight\", largeStraight.evalRoll)} />\n              <RuleRow name=\"Yahtzee\" score={scores.yahtzee} description={yahtzee.description} doScore={evt => doScore(\"yahtzee\", yahtzee.evalRoll)} />\n              <RuleRow name=\"Chance\" score={scores.chance} description={chance.description} doScore={evt => doScore(\"chance\", chance.evalRoll)} />\n            </tbody>\n          </table>\n        </section>\n        <h2>TOTAL SCORE: {this.getTotalScore()}</h2>\n      </div>\n    )\n  }\n}\n\nexport default ScoreTable;","import React, { Component } from \"react\";\nimport Dice from \"./Dice\";\nimport ScoreTable from \"./ScoreTable\";\nimport \"./Game.css\";\n\nconst NUM_DICE = 5;\nconst NUM_ROLLS = 3;\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dice: Array.from({ length: NUM_DICE }),\n      locked: Array(NUM_DICE).fill(false),\n      rollsLeft: NUM_ROLLS,\n      rolling: false,\n      scores: {\n        ones: undefined,\n        twos: undefined,\n        threes: undefined,\n        fours: undefined,\n        fives: undefined,\n        sixes: undefined,\n        threeOfKind: undefined,\n        fourOfKind: undefined,\n        fullHouse: undefined,\n        smallStraight: undefined,\n        largeStraight: undefined,\n        yahtzee: undefined,\n        chance: undefined\n      }\n    };\n    this.roll = this.roll.bind(this);\n    this.doScore = this.doScore.bind(this);\n    this.toggleLocked = this.toggleLocked.bind(this);\n    this.animateRoll = this.animateRoll.bind(this);\n  }\n  componentDidMount(){\n    this.animateRoll();\n  }\n\n  animateRoll() {\n    this.setState({ rolling: true }, () => {\n      setTimeout(this.roll, 1000)\n    })\n  }\n\n  roll(evt) {\n    // roll dice whose indexes are in reroll\n    this.setState(st => ({\n      dice: st.dice.map((d, i) =>\n        st.locked[i] ? d : Math.ceil(Math.random() * 6)\n      ),\n      // locked: is rolls left more than 1? then locked: true, else rolls left minus 1\n      // rolls left default is 3\n      locked: st.rollsLeft > 1 ? st.locked : Array(NUM_DICE).fill(true),\n      rollsLeft: st.rollsLeft > 0 && st.rollsLeft - 1,\n      rolling: false\n    }));\n  }\n\n  toggleLocked(idx) {\n    // toggle whether idx is in locked or not\n    if (this.state.rollsLeft > 0 && !this.state.rolling) {\n      this.setState(st => ({\n        locked: [\n          ...st.locked.slice(0, idx),\n          !st.locked[idx],\n          ...st.locked.slice(idx + 1)\n        ]\n      }))\n    }\n  }\n\n  doScore(rulename, ruleFn) {\n    // evaluate this ruleFn with the dice and score this rulename\n    this.setState(st => ({\n      scores: { ...st.scores, [rulename]: ruleFn(this.state.dice) },\n      rollsLeft: NUM_ROLLS,\n      locked: Array(NUM_DICE).fill(false)\n    }));\n    this.animateRoll();\n  }\n\n  displayRollInfo(){\n    const messages = [\n      \"O Rolls Left\",\n      \"1 Roll Left\",\n      \"2 Rolls Left\",\n      \"Starting Round\",\n    ]\n    return messages[this.state.rollsLeft];\n  }\n\n  render() {\n    const {dice, locked, rollsLeft, rolling, scores} = this.state;\n    return (\n      <div className='Game'>\n        <header className='Game-header'>\n          <h1 className='App-title'>Yahtzee!</h1>\n\n          <section className='Game-dice-section'>\n            <Dice\n              dice={dice}\n              locked={locked}\n              handleClick={this.toggleLocked}\n              disabled={rollsLeft === 0 || rolling}\n              rolling={rolling}\n            />\n            <div className='Game-button-wrapper'>\n              <button\n                className='Game-reroll'\n                disabled={locked.every(x => x)}\n                onClick={this.animateRoll}\n              >\n                {this.displayRollInfo()}\n              </button>\n            </div>\n          </section>\n        </header>\n        <ScoreTable doScore={this.doScore} scores={scores} />\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React, { Component } from \"react\";\nimport Game from \"./Game\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <Game />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport \"@fortawesome/fontawesome-free/css/all.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}